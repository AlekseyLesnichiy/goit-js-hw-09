{"version":3,"sources":["js/03-promises.js"],"names":["refs","document","querySelector","evt","event","preventDefault","createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","callFunc","amount","Number","value","step","then","console","log","catch","form","addEventListener","submitBtn"],"mappings":";AACA,MAAMA,EAAO,CACFC,MAAAA,SAASC,cAAc,gBACxBD,KAAAA,SAASC,cAAc,eACrBD,OAAAA,SAASC,cAAc,iBACpBD,UAAAA,SAASC,cAAc,UAC5BD,KAAAA,SAASC,cAAc,UAIjC,SAASC,EAAIC,GACXA,EAAMC,iBAMR,SAASC,EAAcC,EAAUC,GACxB,OAAA,IAAIC,QAAQ,CAACC,EAASC,KAErBC,MAAAA,EAAgBC,KAAKC,SAAW,GACtCC,WAAW,KACLH,EACFF,EAAQ,CAAEH,SAAAA,EAAUC,MAAAA,IAEpBG,EAAO,CAAEJ,SAAAA,EAAUC,MAAAA,KAEpBA,KAIP,SAASQ,IACPC,OAASC,OAAOlB,EAAKiB,OAAOE,OAC5BX,MAAQU,OAAOlB,EAAKQ,MAAMW,OAC1BC,KAAOF,OAAOlB,EAAKoB,KAAKD,OACnB,IAAA,IAAIZ,EAAW,EAAGA,GAAYU,OAAQV,GAAY,EACrDD,EAAcC,EAAUC,OACrBa,KAAK,EAAGd,SAAAA,EAAUC,MAAAA,MACrBc,QAAQC,2BAA2BhB,QAAeC,SAEnDgB,MAAM,EAAGjB,SAAAA,EAAUC,MAAAA,MAClBc,QAAQC,0BAA0BhB,QAAeC,SAEjDA,OAASY,KAlCbpB,EAAKyB,KAAKC,iBAAiB,SAAUvB,GAKrCH,EAAK2B,UAAUD,iBAAiB,QAASV","file":"03-promises.b775b4ae.js","sourceRoot":"../src","sourcesContent":["\nconst refs = {\n  \"delay\": document.querySelector(\"[data-delay]\"),\n  \"step\": document.querySelector(\"[data-step]\"),\n  \"amount\": document.querySelector(\"[data-amount]\"),\n  \"submitBtn\": document.querySelector(\"button\"),\n  \"form\": document.querySelector(\".form\"),\n}\n\nrefs.form.addEventListener(\"submit\", evt)\nfunction evt(event) {\n  event.preventDefault();\n}\n\nrefs.submitBtn.addEventListener(\"click\", callFunc);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) =>\n  {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  \n})\n}\nfunction callFunc() {\n  amount = Number(refs.amount.value) ;\n  delay = Number(refs.delay.value);\n  step = Number(refs.step.value);\n  for (let position = 1; position <= amount; position += 1){\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    delay += step;\n  }\n}\n// createPromise(2, 1500)\n  // .then(({ position, delay }) => {\n  //   console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  // })\n  // .catch(({ position, delay }) => {\n  //   console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  // });"]}